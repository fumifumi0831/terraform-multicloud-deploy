name: Multi-Cloud Terraform Deployment

on:
  # プッシュ時に実行
  push:
    branches: [ main ]
    paths:
      - 'aws/**'
      - 'azure/**'
      - 'gcp/**'
      - '.github/workflows/**'
  
  # プルリクエスト時に実行
  pull_request:
    branches: [ main ]
    paths:
      - 'aws/**'
      - 'azure/**'
      - 'gcp/**'
      - '.github/workflows/**'
  
  # 手動実行
  workflow_dispatch:
    inputs:
      deploy_target:
        description: 'デプロイターゲット'
        required: true
        default: 'all'
        type: choice
        options:
          - all
          - aws
          - azure
          - gcp

jobs:
  # 変更されたディレクトリを検出するジョブ
  detect-changes:
    runs-on: ubuntu-latest
    outputs:
      aws_changed: ${{ steps.filter.outputs.aws }}
      azure_changed: ${{ steps.filter.outputs.azure }}
      gcp_changed: ${{ steps.filter.outputs.gcp }}
    
    steps:
    - name: Checkout
      uses: actions/checkout@v3
      with:
        fetch-depth: 0
    
    - name: Filter paths
      uses: dorny/paths-filter@v2
      id: filter
      with:
        filters: |
          aws:
            - 'aws/**'
          azure:
            - 'azure/**'
          gcp:
            - 'gcp/**'

  # AWS デプロイジョブ
  deploy-aws:
    needs: detect-changes
    if: |
      github.event_name == 'workflow_dispatch' && (github.event.inputs.deploy_target == 'all' || github.event.inputs.deploy_target == 'aws') ||
      github.event_name != 'workflow_dispatch' && needs.detect-changes.outputs.aws_changed == 'true'
    runs-on: ubuntu-latest
    environment: aws-deployment
    
    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v2
      with:
        terraform_version: 1.5.0
        cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}

    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ap-northeast-1

    - name: Terraform Init
      run: terraform init
      working-directory: ./aws

    - name: Terraform Format
      run: terraform fmt -check
      working-directory: ./aws

    - name: Terraform Validate
      run: terraform validate
      working-directory: ./aws

    - name: Terraform Plan
      run: terraform plan
      working-directory: ./aws
      if: github.event_name == 'pull_request'

    - name: Terraform Apply
      run: terraform apply -auto-approve
      working-directory: ./aws
      if: github.event_name == 'push' || github.event_name == 'workflow_dispatch'

  # Azure デプロイジョブ
  deploy-azure:
    needs: detect-changes
    if: |
      github.event_name == 'workflow_dispatch' && (github.event.inputs.deploy_target == 'all' || github.event.inputs.deploy_target == 'azure') ||
      github.event_name != 'workflow_dispatch' && needs.detect-changes.outputs.azure_changed == 'true'
    runs-on: ubuntu-latest
    environment: azure-deployment
    
    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v2
      with:
        terraform_version: 1.5.0
        cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}

    - name: Azure Login
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}

    # ここに環境変数を抽出するステップを追加
    - name: Extract Azure Credentials
      run: |
        # JSONからクレデンシャル情報を抽出
        AZURE_CREDS='${{ secrets.AZURE_CREDENTIALS }}'
        echo "ARM_CLIENT_ID=$(echo $AZURE_CREDS | jq -r .clientId)" >> $GITHUB_ENV
        echo "ARM_CLIENT_SECRET=$(echo $AZURE_CREDS | jq -r .clientSecret)" >> $GITHUB_ENV
        echo "ARM_SUBSCRIPTION_ID=$(echo $AZURE_CREDS | jq -r .subscriptionId)" >> $GITHUB_ENV
        echo "ARM_TENANT_ID=$(echo $AZURE_CREDS | jq -r .tenantId)" >> $GITHUB_ENV

    - name: Terraform Init
      run: terraform init
      working-directory: ./azure
      # ここに環境変数を追加
      env:
        ARM_CLIENT_ID: ${{ env.ARM_CLIENT_ID }}
        ARM_CLIENT_SECRET: ${{ env.ARM_CLIENT_SECRET }}
        ARM_SUBSCRIPTION_ID: ${{ env.ARM_SUBSCRIPTION_ID }}
        ARM_TENANT_ID: ${{ env.ARM_TENANT_ID }}

    - name: Terraform Format
      run: terraform fmt -check
      working-directory: ./azure

    - name: Terraform Validate
      run: terraform validate
      working-directory: ./azure
      # ここに環境変数を追加
      env:
        ARM_CLIENT_ID: ${{ env.ARM_CLIENT_ID }}
        ARM_CLIENT_SECRET: ${{ env.ARM_CLIENT_SECRET }}
        ARM_SUBSCRIPTION_ID: ${{ env.ARM_SUBSCRIPTION_ID }}
        ARM_TENANT_ID: ${{ env.ARM_TENANT_ID }}

    - name: Terraform Plan
      run: terraform plan
      working-directory: ./azure
      if: github.event_name == 'pull_request'
      # ここに環境変数を追加
      env:
        ARM_CLIENT_ID: ${{ env.ARM_CLIENT_ID }}
        ARM_CLIENT_SECRET: ${{ env.ARM_CLIENT_SECRET }}
        ARM_SUBSCRIPTION_ID: ${{ env.ARM_SUBSCRIPTION_ID }}
        ARM_TENANT_ID: ${{ env.ARM_TENANT_ID }}

    - name: Terraform Apply
      run: terraform apply -auto-approve
      working-directory: ./azure
      if: github.event_name == 'push' || github.event_name == 'workflow_dispatch'
      # ここに環境変数を追加
      env:
        ARM_CLIENT_ID: ${{ env.ARM_CLIENT_ID }}
        ARM_CLIENT_SECRET: ${{ env.ARM_CLIENT_SECRET }}
        ARM_SUBSCRIPTION_ID: ${{ env.ARM_SUBSCRIPTION_ID }}
        ARM_TENANT_ID: ${{ env.ARM_TENANT_ID }}
        
  # GCP デプロイジョブ
  deploy-gcp:
    needs: detect-changes
    if: |
      github.event_name == 'workflow_dispatch' && (github.event.inputs.deploy_target == 'all' || github.event.inputs.deploy_target == 'gcp') ||
      github.event_name != 'workflow_dispatch' && needs.detect-changes.outputs.gcp_changed == 'true'
    runs-on: ubuntu-latest
    environment: gcp-deployment
    
    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v2
      with:
        terraform_version: 1.5.0
        cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}

    - name: Authenticate to Google Cloud
      uses: google-github-actions/auth@v1
      with:
        credentials_json: ${{ secrets.GCP_CREDENTIALS }}

    - name: Set up Google Cloud SDK
      uses: google-github-actions/setup-gcloud@v1

    - name: Terraform Init
      run: terraform init
      working-directory: ./gcp

    - name: Terraform Format
      run: terraform fmt -check
      working-directory: ./gcp

    - name: Terraform Validate
      run: terraform validate
      working-directory: ./gcp

    - name: Terraform Plan
      run: |
        terraform plan -var="gcp_project_id=${{ secrets.GCP_PROJECT_ID }}"
      working-directory: ./gcp
      if: github.event_name == 'pull_request'

    - name: Terraform Apply
      run: |
        terraform apply -auto-approve -var="gcp_project_id=${{ secrets.GCP_PROJECT_ID }}"
      working-directory: ./gcp
      if: github.event_name == 'push' || github.event_name == 'workflow_dispatch'